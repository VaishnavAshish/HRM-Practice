<script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
    crossorigin="anonymous"></script>
<!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.19.1/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.21/moment-timezone.min.js">

</script> -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.1/moment.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.16/moment-timezone-with-data.min.js"></script>
<!-- <script src="/js/summernote-lite.js"></script> -->
<!-- <script src="./../../node_modules/ejs/ejs.min.js"></script> -->

<script src="/js/util.js"></script>
<script src="/node_modules/parsleyjs/dist/parsley.min.js"></script>
<script src="/js/flatpickr.min.js"></script>

<script src="https://npmcdn.com/ejs@1.0.0/ejs.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/money.js/0.2.0/money.min.js"></script>


<script>
    var DEBUG = window.location.href.includes('krowsoftware.com')?false:true;
    if(!DEBUG){
      if(!window.console) window.console = {};
      var methods = ["log", "debug", "warn", "info"];
      for(var i=0;i<methods.length;i++){
          console[methods[i]] = function(){};
      }
    }

    function minuteToHours(min) {
        var num = min;
        var hours = (num / 60);
        var rhours = Math.floor(hours);
        var minutes = (hours - rhours) * 60;
        var rminutes = Math.round(minutes);
        rminutes = rminutes < 10 ? '0'+rminutes : rminutes;
        return rhours + ":" + rminutes;
    }

    function hoursToMinutes(hours) {
        console.log("Hours: " + typeof(hours));
        console.log("Hours: " + hours);
        if(!hours.includes('.') && !hours.includes(':')){
            hours = hours + '.0'
        }
        console.log(hours);
        var hoursArr = hours.includes('.') ? hours.split('.') : hours.split(':');
        if(hoursArr[1] > 60) {
            hoursArr[1] = Math.round((hoursArr[1] * 60) / 100);
        }
        var minutes = (+hoursArr[0]) * 60 + (+hoursArr[1]);
        console.log(minutes);
        return minutes;
    }

    function createJSONForFormData(formId) {
        console.log(formId + " [getFormData='']");
        var formData = {};
        $(formId + " [getFormData='']").each(function () {
            var eleType = $(this).prop('nodeName');
            var fieldName = $(this).attr('name');
            if (eleType == 'SELECT') {
                formData[fieldName] = $('option:selected', this).val();
            } else if (eleType == 'INPUT') {
                var fieldType = $(this).prop('type');
                if (fieldType == 'text' || fieldType == 'number' || fieldType == 'email' || fieldType == 'password' || fieldType == 'hidden') {
                    formData[fieldName] = $(this).val();
                } else if (fieldType == 'checkbox' || fieldType == 'radio') {
                    formData[fieldName] = $(this).prop('checked');
                } else if (fieldType == 'date') {
                    formData[fieldName] = $(this).val();
                }
            } else if (eleType == 'TEXTAREA') {
                formData[fieldName] = $(this).val();
            } else {
                console.log(eleType);
                console.log(fieldName);
                formData[fieldName] = $(this).html();
                console.log($(this).html());
            }
        });
        return formData;
    }

    /* function resetForm(formId) {
        $(formId).find('input, textarea, select').each(function () {
            $(this).val("");
        });
        return true;
    } */

    function addError(id, msg) {
        $(id).closest('.slds-form-element').addClass('slds-has-error');
        $(id).closest('.slds-form-element').find('.slds-text-color_error').html(msg);
    }

    function clearError(id) {
        $(id).closest('.slds-form-element').removeClass('slds-has-error');
        $(id).closest('.slds-form-element').find('.slds-text-color_error').html('');
    }
    function clearSearchBox(obj){
        $(obj).closest('div').siblings('input').val('');
    }
    function checkFormValidation(formId) {
        console.log(formId + " [required='']");
        let flag=false;
        $("[required='']",formId).each(function(){
            var eleType = $(this).prop('nodeName');
            if($(this).val() == null || $(this).val().trim() == ''){
                // console.log("Inside If", '#'+$(this).attr('id'));
                flag=true;
                if(eleType == 'SELECT'){
                    addError('#'+$(this).attr('id'), "Please select any option")
                    $(formId).addClass('has-error');
                    return false;
                }
                else{
                    // console.log("Inside If-else");
                    addError('#'+$(this).attr('id'), "This field is required.Please enter required data");
                    $(formId).addClass('has-error');
                    return false;
                }
            } else {
                // console.log("Inside else");
                clearError('#'+$(this).attr('id'));
                $(formId).removeClass('has-error');
                return true;
            }
        });
        if(!flag){
          $("[phone]",formId).each(function(){
            if($(this).val()!=''){
              if(!phoneNumber($(this).val())) {
                addError('#'+$(this).attr('id'), "Please enter valid phone number");
                $(formId).addClass('has-error');
                flag=true;
                return false;
              }
            }
            clearError('#'+$(this).attr('id'));
            $(formId).removeClass('has-error');
            return true;
          });
        }
        if(!flag){
          $("[mobile]",formId).each(function(){
            // if($(this).val()!=''){
            //   if(!mobileNumber($(this).val())) {
            //     addError('#'+$(this).attr('id'), "Please enter valid mobile number");
            //     $(formId).addClass('has-error');
            //     flag=true;
            //     return false;
            //   }
            // }
            clearError('#'+$(this).attr('id'));
            $(formId).removeClass('has-error');
            return true;
          });
        }
        if(!flag){
          $("[email]",formId).each(function(){
            if($(this).val()!=''){
              if(!validateEmail($(this).val())) {
                addError('#'+$(this).attr('id'), "Please enter valid email");
                $(formId).addClass('has-error');
                flag=true;
                return false;
              }
            }
            clearError('#'+$(this).attr('id'));
            $(formId).removeClass('has-error');
            return true;
          });
        }
        if(!flag){
          $("[alphabet]",formId).each(function(){
            if($(this).val()!=''){
              if(!alphabetChecking($(this).val())) {
                addError('#'+$(this).attr('id'), "Please enter valid input .It accepts only alphabets");
                $(formId).addClass('has-error');
                flag=true;
                return false;
              }
            }
            clearError('#'+$(this).attr('id'));
            $(formId).removeClass('has-error');
            return true;
          });
        }
        if(!flag){
          $("[decimal]",formId).each(function(){
            if($(this).val()!=''){
              if(!decimalNumber($(this).val())) {
                addError('#'+$(this).attr('id'), "Please enter valid decimal value");
                $(formId).addClass('has-error');
                flag=true;
                return false;
              }else if($(this).val()<0){
                addError('#'+$(this).attr('id'), "Please enter positive decimal value");
                $(formId).addClass('has-error');
                flag=true;
                return false;
              }
            }
            clearError('#'+$(this).attr('id'));
            $(formId).removeClass('has-error');
            return true;
          });
        }
        if(!flag){
          $("[time]",formId).each(function(){
            if($(this).val()!=''){
              if(!validateTime($(this).val())) {
                addError($(this), "Please enter valid hours and minutes.");
                $(formId).addClass('has-error');
                flag=true;
                return false;
              }
            }
            clearError($(this));
            $(formId).removeClass('has-error');
            return true;
          });
        }
        if(!flag){
          $("[positiveInteger]",formId).each(function(){
            if($(this).val()!=''){
              if(!validateInteger($(this).val())) {
                addError($(this), "Please enter valid positive integer value.");
                $(formId).addClass('has-error');
                flag=true;
                return false;
              }
            }
            clearError($(this));
            $(formId).removeClass('has-error');
            return true;
          });
        }
    }

    function validateInteger(inputtxt) {
        var isValid = /^\+?(0|[1-9]\d*)$/;

        if (inputtxt.match(isValid)) {
          return true;
        }
        return false;
    }

    function validateTime(inputtxt) {
        var isValid = /^([0,1][0-9]|2[0-3])(:([0-5][0-9]))?$/;

        if (inputtxt.match(isValid)) {
          return true;
        }
        return false;
    }

    function decimalNumber(inputtxt) {
      if(!isNaN(inputtxt)) {
          return true;
      }
      return false;

    }
    function phoneNumber(inputtxt) {
      var phoneno = /^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;
      if(inputtxt.match(phoneno)) {
          return true;
      }
      return false;

    }
    function mobileNumber(inputtxt) {
      var mobileno = /^([+]?\d{1,3}[-\s]?)?(\d{3}[-]?){2}\d{4}$/;
      if(inputtxt.match(mobileno)) {
          return true;
      }
      return false;
    }

    //[a-zA-Z][a-zA-Z ]+[a-zA-Z]
    function alphabetChecking(inputtxt){
      var alphaExp = /^[a-zA-Z][a-zA-Z ]+[a-zA-Z]*$/;
      if(inputtxt.match(alphaExp)) {
          return true;
      }
      return false;
    }
    function validateEmail(inputtxt){
        var emailReg = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
        if(inputtxt.match(emailReg)) {
            return true;
        }
        return false;
    }
    function handle(e,obj){
        if(e.keyCode === 13){
            e.preventDefault();
            console.log("Enter was pressed was presses");
            eval($(obj).attr('searchFunc'));

        }
    }

    function deleteBeforeConfirm(modalId, methodName,msg) {
        console.log(methodName);
        $('p[alert-message]',modalId).text('Are you sure you want to delete this item?');
        if(msg){
          $('p[alert-message]',modalId).text(msg);
        }
        openModal(modalId);
        $('[btn-confirm]', modalId).attr('method', methodName);
    }

    function confirmDeleteItem(ele) {
        closeModal('#globalAlert');
        eval($(ele).attr('method'));
    }

    function activateBeforeConfirm(modalId, methodName) {
        console.log(methodName);
        $('p[alert-message]',modalId).text('Are you sure you want to activate this item?');
        openModal(modalId);
        $('[btn-confirm]', modalId).attr('method', methodName);

    }

    function activate(id,objectName){
        console.log('id is '+id+' object is'+objectName);
        showLoader('#globalLoader');
        $.ajax({
          type: 'POST',
          url : '/activate',
          contentType: 'application/json',
          dataType: 'json',
          data:JSON.stringify({"id":id,"object":objectName}),
           success : function(response){
                console.log(response);
                hideLoader('#globalLoader');
                showGlobalToast('#globalToast', 'success', response.message, 4000);

               location.reload();

            },
           error: function(response){
                console.log('error is : '+JSON.stringify(response));
                hideLoader('#globalLoader');
                console.log(response.responseJSON.message);
                showGlobalToast('#globalToast', 'error', response.responseJSON.message, 4000);

            }
        });
    }

    function validateEmail(sEmail) {
          var reEmail = /^(?:[\w\!\#\$\%\&\'\*\+\-\/\=\?\^\`\{\|\}\~]+\.)*[\w\!\#\$\%\&\'\*\+\-\/\=\?\^\`\{\|\}\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-](?!\.)){0,61}[a-zA-Z0-9]?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\[(?:(?:[01]?\d{1,2}|2[0-4]\d|25[0-5])\.){3}(?:[01]?\d{1,2}|2[0-4]\d|25[0-5])\]))$/;
          if(!sEmail.match(reEmail)) {
            /*alert("Invalid email address");*/
            return false;
          }
          return true;
    }
</script>
