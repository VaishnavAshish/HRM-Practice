<% include ../modals/modal-add-new-timesheet-quick %>
<!-- views/layouts/nav.ejs -->
    <div class="slds-global-header_container">
        <div class="slds-context-bar slds-grid_vertical-align-center top-bar-space">

            <div class="slds-no-flex line-right">
                <a href="javascript:void(0);" class="slds-p-around_small" onclick="collapseSideMenu();">
                    <i class="fa fa-bars text-size-21"></i>
                </a>
            </div>
            <div class="slds-has-flexi-truncate slds-p-left_small">
                <div class="">
                    <h1 class="slds-text-heading_medium slds-truncate max-w-500 sm-text-size-14">
                        <!-- <i class="fas fa-warehouse text-green"></i> &nbsp; -->
                        <%=user.company %>

                    </h1>
                </div>
            </div>
            <% if(user.user_role.includes('ADMIN')) { %>
                <div class="slds-no-flex">
                  <% console.log('user.company_info.stripe_customer_id '+user.company_info.stripe_customer_id) %>
                  <% if(user.company_info.stripe_customer_id){ %>
                    <button class="slds-button slds-button_neutral slds-align-top hide" type="button" onclick="enableIntegration()" enableIntegration>
                        Upgrade Account
                    </button>
                    <button class="slds-button slds-button_neutral slds-align-top" type="button" onclick="deleteBeforeConfirm('#globalAlert', 'disableIntegration()','Are you sure you want downgrade to the free version?  Press confirm to continue.');" disableIntegration>
                        Downgrade Account
                    </button>
                  <% } else { %>
                    <button class="slds-button slds-button_neutral slds-align-top" type="button" onclick="enableIntegration()" enableIntegration>
                        Upgrade Account
                    </button>
                    <button class="slds-button slds-button_neutral slds-align-top hide" type="button" onclick="disableIntegration()" disableIntegration>
                        Downgrade Account
                    </button>
                  <% } %>
                </div>
              <% } %>

            <div class="slds-no-flex slds-p-horizontal_large">
                <div class="slds-grid slds-grid_vertical-align-center">
                    <div class="slds-p-right_medium sm-hide">
                        <% if(user.permissions.includes("timesheetEntry")){ %>
                          <!-- <div title="Start Timer" name="globalStart" start-timer class="cursor-pointer hide"  onclick="startKwTimerGlobally(this,'[name=kwTimer]');" timerDiv>
                              <div class="bg-dull vpd-5 hpd-15 radius-500 " name="" >
                                <div class="slds-grid">
                                  <div class="cursor-pointer">
                                        <i class="fa fa-play text-blue fa-fw"></i>
                                  </div>
                                    <div class="slds-no-flex slds-p-horizontal_x-small">
                                        <time>
                                            Start
                                        </time>
                                    </div>
                                    <div class="lpd-5 line-semi-black-left slds-col--bump-left">
                                        <i class="far fa-clock"></i>
                                    </div>
                                </div>
                            </div>
                          </div>

                          <div title="Stop Timer" name="globalStop" stop-timer class="cursor-pointer hide" onclick="stopKwTimerGlobally(this, '[name=kwTimer]', '#syncTimer', '#modalAddNewTsheetQuick');" timerDiv>
                              <div class="bg-dull vpd-5 hpd-15 radius-500 " name="" >
                                <div class="slds-grid">
                                  <div class="cursor-pointer">
                                        <i class="fa fa-stop text-red"></i>
                                    </div>
                                    <div class="slds-no-flex slds-p-horizontal_x-small" name="kwTimer">
                                        <time name="kwTimer">0:00:01</time>

                                    </div>
                                    <div class="lpd-5 line-semi-black-left slds-col--bump-left">
                                        <i class="far fa-clock"></i>

                                        <svg aria-hidden="true" focusable="false"  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 44 44" width="23px" height="23px"  class="view-inline">
                                            <circle  cx="50%" cy="50%" fill="transparent" r="15.909091" stroke="#ddd" stroke-width="6"></circle>
                                            <circle cx="50%" cy="50%" fill="transparent" r="15.909091" stroke="#00cc33" stroke-width="6" stroke-dashoffset="25" stroke-dasharray=[0 100]>
                                                <animate attributeName="stroke-dasharray"   from="0 100" to="100 0" dur="60s" repeatCount="indefinite"/>
                                              </circle>
                                            <circle  cx="50%" cy="50%" fill="red" r="6"stroke-width="0">
                                                 <animate attributeName="opacity"   from="0" to="1" dur="60s" repeatCount="indefinite"/>
                                            </circle>
                                        </svg>


                                    </div>
                                </div>
                            </div>
                          </div> -->
                          <div title="Start Timer" name="globalStart" start-timer class="cursor-pointer hide"  onclick="startKwTimerGlobally(this,'[name=kwTimer]');" timerDiv>
                              <div class="bg-dull vpd-5 hpd-15 radius-500 " name="" >
                                <div class="slds-grid">
                                  <div class="cursor-pointer">
                                        <i class="fa fa-play text-blue fa-fw"></i>
                                  </div>
                                    <div class="slds-no-flex slds-p-horizontal_x-small">
                                        <time>
                                            Start
                                        </time>
                                    </div>
                                    <div class="lpd-5 line-semi-black-left slds-col--bump-left">
                                        <i class="far fa-clock"></i>
                                    </div>
                                </div>
                            </div>
                          </div>

                          <div title="Stop Timer" name="globalStop" stop-timer class="cursor-pointer hide" onclick="stopKwTimerGlobally(this, '[name=kwTimer]', '#syncTimer', '#modalAddNewTsheetQuick');" timerDiv>
                              <div class="bg-dull vpd-5 hpd-15 radius-500 " name="" >
                                <div class="slds-grid">
                                  <div class="cursor-pointer">
                                        <i class="fa fa-stop text-red"></i>
                                    </div>
                                    <div class="slds-no-flex slds-p-horizontal_x-small">
                                        <time name="kwTimer">0:00:01</time>
                                    </div>
                                    <div class="lpd-5 line-semi-black-left slds-col--bump-left">
                                        <i class="far fa-clock"></i>
                                    </div>
                                </div>
                            </div>
                          </div>
                        <%}%>
                    </div>
                    <div class="slds-p-right_medium">
                        <!-- <i class="fa fa-bell fa-2x text-gray cursor-pointer" title="Notifications" onclick="showNotification('#kwNotiPanel', '#kwNotiLoader')"></i> -->
                        <a href="https://freepsa.zendesk.com" target="_blank">
                            <i class="fa fa-question-circle fa-2x text-gray cursor-pointer" title="Help"></i>
                        </a>
                    </div>
                    <div>
                        <div class="slds-dropdown-trigger slds-dropdown-trigger_click rpd-8" onclick="openDropdown(this, event, true);">
                            <span class="slds-avatar slds-avatar_circle cursor-pointer">
                                <img alt="Person name" src="/getUserPicture/<%= user.id %>" title="<%= user.email %>" />
                            </span>
                            <div class="slds-dropdown slds-dropdown_right slds-nubbin_top-right">
                                <ul class="slds-dropdown__list">
                                    <li class="slds-dropdown__item" >
                                        <a href="/user-profile"  tabindex="0">
                                            <span class="slds-truncate">Profile</span>
                                        </a>
                                    </li>
                                    <!-- <% if(user.user_role.includes("ADMIN") || user.user_role.includes("USER")){ %>
                                    <li class="slds-dropdown__item" >
                                        <a href="/company-profile"  tabindex="-1">
                                            <span class="slds-truncate">Company Profile</span>
                                        </a>
                                    </li>
                                    <%}%> -->

                                    <li class="slds-has-divider_top-space"></li>
                                    <li class="slds-dropdown__item" >
                                        <a href="/logout"  tabindex="-1">
                                            <span class="slds-truncate">Logout</span>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
    crossorigin="anonymous"></script>
    <script src="https://js.stripe.com/v3/"></script>

    <% include ../modals/modal-add-card-detail.ejs %>
    <script>
        <% console.log('user.stripe_publish_key')
        console.log(user.stripe_publish_key) %>
        var stripe = Stripe('<%= user.stripe_publish_key %>');
        var card;

        function disableIntegration(){
        	showLoader('#globalLoader');
        	$.ajax({
        				type: 'POST',
        				url : '/disableStripe',
        				success : function(response){
        						closeModal('#modalAddPaymentDetail');
        						showGlobalToast('#globalToast', 'success', response.message, 4000);
        						$("button[enableIntegration]").show();
        						$("button[disableIntegration]").hide();
        						$("#integration-dashboard").hide();
                    console.log('response is : '+JSON.stringify(response));
                    setTimeout(function(){
                      hideLoader('#globalLoader');
          						location.reload();
          					},4000)
        				},
        				error: function(response){
        					hideLoader('#globalLoader');
        					showGlobalToast('#globalToast', 'error', response.responseJSON.message, 4000);
        					setTimeout(function(){
        						location.reload();
        					},5000)
        					console.log('error is : '+JSON.stringify(response));

        				}
        			});
        }

        function checkPaymentAndAdd(){
        	showLoader('#globalLoader');
        	$("#card-errors").text('');
        	stripe.createToken(card).then(function(result) {
            if (result.error) {
              // Inform the user if there was an error.
        			hideLoader('#globalLoader');
              var errorElement = document.getElementById('card-errors');
              errorElement.textContent = result.error.message;
            } else {
              // Send the token to your server.
              // stripeTokenHandler(result.token);
        			$.ajax({
        						type: 'POST',
        						url : '/initiateStripe',
        						contentType: 'application/json',
        						dataType :'json',
        						data:JSON.stringify({stripeToken:result.token.id}),
        						success : function(response){
        								hideLoader('#globalLoader');
        								closeModal('#modalAddPaymentDetail');
        								showGlobalToast('#globalToast', 'success', response.message, 4000);
        								$("button[enableIntegration]").hide();
        								$("button[disableIntegration]").show();
        								location.reload();
        								console.log('response is : '+JSON.stringify(response));
        						},
        						error: function(response){
        							hideLoader('#globalLoader');
        							showGlobalToast('#globalToast', 'error', response.responseJSON.message, 4000);
        							setTimeout(function(){
        								location.reload();
        							},5000)
        							console.log('error is : '+JSON.stringify(response));

        						}
        					});
            }
          });

        }

        function enableIntegration(){
        	var elements = stripe.elements();
        	card = elements.create('card', {
        	  hidePostalCode: true,
        	  style: {
        	    base: {
        	      iconColor: '#F99A52',
        	      color: '#32315E',
        	      lineHeight: '48px',
        	      fontWeight: 400,
        	      fontFamily: '"Open Sans", "Helvetica Neue", "Helvetica", sans-serif',
        	      fontSize: '15px',

        	      '::placeholder': {
        	        color: '#CFD7DF',
        	      }
        	    },
        	  }
        	});
        	card.mount('#card-element');
        	// $("#paymentDetail").show();

        	openModal('#modalAddPaymentDetail')

        }

        function getProjectForCompany(next) {
            $.ajax({
                type: 'GET',
                url: '/getProjectListForCompany',
                contentType: 'application/json',
                dataType: 'json',
                success: function (response) {
                    console.log(response);
                    if (response.success == true) {
                        let projects=response.projects;
                        companyDefaultTimezone=response.companyDefaultTimezone;
                        userRoles=response.userRoles;
                        let optionUserRole='';
                        userRoles.forEach(function(roles){
                            optionUserRole+='<option value="'+roles+'">'+roles+'</option>'
                        });
                        $("#globalUserRole").html(optionUserRole);

                        next(projects,null);
                    } else {
                        console.log(response);
                        next(projects,response.message);

                    }
                },
                error: function (response) {
                    console.log(response);

                    next(null,response.responseJSON.message);
                }
            });
        }
    </script>
    <script>
    $(window).on('load',function(e){
        getProjectForCompany((projects,error)=>{
                if(error){
                    showGlobalToast('#globalToast', 'error', response.responseJSON.message, 4000);
                }else{
                    let options='';
                    // companyDefaultTimezone=response.companyDefaultTimezone;
                    // userRoles=response.userRoles;
                    if(projects.length<=0){
                        options+='<option value="">No Project Found</option>'
                        /*addError("#globalProjectForTimesheet","No project found");*/
                    }else{
                        options+='<option value=""> </option>'
                        projects.forEach(function(project){
                            options+='<option pr_id="'+project.id+'" value="'+project.name+'">'+project.name+'</option>'
                        });
                        $("#globalProjectForTimesheet").html(options);
                    }
                    $.ajax({
                        type: 'POST',
                        url: '/getTimesheetWithPlay',
                        contentType: 'application/json',
                        dataType: 'json',
                        success: function (response) {
                            //console.log(response);
                            if (response.success == true) {
                                //console.log('timesheet data which is playing '+JSON.stringify(response.timesheetData));
                                if(response.timesheetData.length>0){
                                  // $("[timerDiv]").on('click',function(){stopKwTimerGlobally(this, '[name=kwTimer]', '#syncTimer', '#modalAddNewTsheetQuick')});
                                  let timesheetCreatedDate=response.timesheetData[0].created_date.toString().split(' ')[0].split('T')[0];
                                  if(timesheetCreatedDate==response.currentDate){

                                    // $("[name=kwTimer]").attr("taskId",response.timesheetData[0].id);
                                    // $("[name=kwTimer]").attr("lineItemTaskId",response.timesheetData[0].task_id);
                                    // let eleToStart=$("#day-tabs").find("[line_item_id='"+response.timesheetData[0].id+"']").not('.hide');
                                    // if(eleToStart.length>0){
                                    //   startTimer(eleToStart);
                                    // }else{
                                    //   $("[name=globalStart]").addClass('hide');
                                    //   $("[name=globalStop]").removeClass('hide');
                                    // }
                                    let lastruntime = moment.tz(response.timesheetData[0].lastruntime , companyDefaultTimezone).format('HH:mm:ss');
                                    hmsToSecondsOnly(lastruntime,(playStartTime)=>{
                                      hmsToSecondsOnly(response.currentTime,(currentTime)=>{
                                      //let currentTime=hoursToMinutes((new Date()).toTimeString().split(' ')[0]);

                                          let difference=currentTime-playStartTime;
                                          let previousTotalHours=(response.timesheetData[0].total_work_hours*60);
                                          secondsToHms(previousTotalHours+difference,(currentPlayingTime)=>{
                                                $("[name=kwTimer]").text(currentPlayingTime);
                                                $("[name=kwTimer]").attr("taskId",response.timesheetData[0].id);
                                                $("[name=kwTimer]").attr("lineItemTaskId",response.timesheetData[0].task_id);

                                              let eleToStart=$("#day-tabs").find("[line_item_id='"+response.timesheetData[0].id+"']").not('.hide');
                                              // $("[timerDiv]").show();
                                              if(eleToStart.length>0){
                                                $(eleToStart).closest('.slds-grid').find('time').text(currentPlayingTime);
                                                startTimer(eleToStart);
                                              }else{
                                                $("[name=globalStart]").addClass('hide');
                                                // $("[name=globalStart]").css('display','none');
                                                $("[name=globalStart]").next('[stop-timer]').removeClass('hide');
                                                kwCounter = $("[name=kwTimer]");
                                                intervalID = NaN;
                                                if (isNaN(intervalID)){
                                                  intervalID = setInterval(incrementTime, 1000);
                                                }
                                              }
                                              console.log(difference);
                                          });

                                      });

                                    });
                                  } else {
                                    // $("[name=kwTimer]").attr("taskId",response.timesheetData[0].id);
                                    // $("[name=kwTimer]").attr("lineItemTaskId",response.timesheetData[0].task_id);
                                    // $("[name=kwTimer]").attr("lineItemDate",response.timesheetData[0].created_date.toString().split('T')[0].split(' ')[0]);
                                    // stopKwTimerGlobally(this, '[name=kwTimer]', '#syncTimer', '#modalAddNewTsheetQuick');
                                    let lastruntime = moment.tz(response.timesheetData[0].lastruntime , companyDefaultTimezone).format('HH:mm:ss');
                                    hmsToSecondsOnly(lastruntime,(playStartTime)=>{
                                        hmsToSecondsOnly('23:59:59',(timesheetDateTime)=>{
                                            let difference=Math.abs(timesheetDateTime-playStartTime);
                                            let previousTotalHours=(response.timesheetData[0].total_work_hours*60);
                                            secondsToHms(previousTotalHours+difference,(currentPlayingTime)=>{

                                                console.log(currentPlayingTime);
                                                $("[name=kwTimer]").text(currentPlayingTime);
                                                $("[name=kwTimer]").attr("taskId",response.timesheetData[0].id);
                                                $("[name=kwTimer]").attr("lineItemTaskId",response.timesheetData[0].task_id);
                                                $("[name=kwTimer]").attr("lineItemDate",response.timesheetData[0].created_date.toString().split('T')[0].split(' ')[0]);
                                                stopKwTimerGlobally(this, '[name=kwTimer]', '#syncTimer', '#modalAddNewTsheetQuick');
                                            });
                                        });
                                    });


                                  }
                                }else{
                                    // $("[timerDiv]").on('click',function(){startKwTimerGlobally(this,'[name=kwTimer]')});
                                    $("[name=globalStart]").removeClass('hide');
                                }
                            } else {
                                console.log(response);
                                showGlobalToast('#globalToast', 'error', response.message, 4000);
                                // next(null,response.message);
                            }
                        },
                        error: function (response) {
                            console.log(response);
                            showGlobalToast('#globalToast', 'error', response.responseJSON.message, 4000);
                            // next(null,response.responseJSON.message);
                        }
                    });
                }
            })
        });
    </script>
    <% include ../layouts/notification-panel %>
