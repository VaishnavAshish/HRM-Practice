<script>
  let colorMap = new Map();
    $(document).ready(function(){
        $("#converWrapper .conver-accord-title:first .expandDiv:first").click();

    })
   function toggleConversation(wrapperId, ele){
       var parent  = $(wrapperId);
       var title  = $(ele).closest('.conver-accord-title');
       if($(title).hasClass('active')){
         $(title).removeClass('active');
         return(false);
       }
        loadRelatedComment(ele,function(){
          $('.conver-accord-title', parent).removeClass('active');
          $(title).addClass('active');
        })
    }
    function loadRelatedComment(ele,cb) {
        // let conversation_id = $(ele).closest('.conver-accord-title').attr('id');
        let conversation_id = $(ele).closest('.conver-accord-title').attr('conversation_id');
        
        showLoader('#globalLoader');
        $.ajax({
          type: 'POST',
          url : '/getAllRelatedComment',
          contentType: 'application/json',
          dataType: 'json',
          data:JSON.stringify({"conversation_id":conversation_id,"project_id":<%= project.id %>}),
          success : function(response){
            hideLoader('#globalLoader');
            if(response.success) {
              //showGlobalToast('#globalToast', 'success', response.message, 4000);
              let commentList = response.relatedCommentList;
              if(commentList.length>0){
                $('.conver-accord-content #commentList',$(ele).closest('.conver-accord-title')).html('');
                commentList.forEach((comment,index) => {
                  addCommentToList($(ele).closest('.conver-accord-title'),comment);
                  if(index == (commentList.length-1)){
                    return cb();
                  }
                })
                $('#conversation'+conversation_id+'_response').html(commentList.length);
              }else{
                return cb();
              }

            }
          },
          error: function(response){
            console.log('error is : '+JSON.stringify(response));
            hideLoader('#globalLoader');
            return cb();
            //showGlobalToast('#globalToast', 'error', response.responseJSON.message, 4000);
          }
        });
    }
    function getRandomColor() {
         // var letters = 'BCDEF'.split('');
         // var color = '#';
         // for (var i = 0; i < 6; i++ ) {
         //     color += letters[Math.floor(Math.random() * letters.length)];
         // }
         // return color;
         return "#"+((1<<24)*Math.random()|0).toString(16);
     }

    function addCommentToList(parentElement,commentData){
      let userDataRole = '<%= user.user_role %>';
      let editableHTML = ``;

      if(commentData.resource_id == <%= user.id %> || userDataRole.includes('ADMIN') ){
        editableHTML = `<div class="slds-no-flex">
                              <a href="javascript:void(0)" onclick="editCommentData('${commentData.id}', \`${commentData.message}\`,'${commentData.parent_id}')">
                                  <i class="fa fa-edit"></i>
                              </a>
                              <a href="javascript:void(0)" class="lpd-10" onclick="deleteBeforeConfirm('#globalAlert', 'deleteCommentData(${commentData.id},${commentData.parent_id})','Are you sure you want to remove this comment ? Press confirm to delete.');">
                                  <i class="fa fa-trash text-red"></i>
                              </a>
                          </div>`;
      }
      if(!colorMap.has(commentData.email)){
        console.log(commentData.email);
        colorMap.set(commentData.email,getRandomColor());
        // colorMap.set(commentData.email,"#DDDDDD");
      }
      let user_image_data = `<span class="slds-avatar slds-avatar_circle user-name-initials" style="background-color:${colorMap.get(commentData.email)};color:white;" title="${commentData.first_name} ${commentData.last_name} By: ${commentData.email} ">
                                  ${commentData.first_name.substring(0,1).toUpperCase()}${commentData.last_name?commentData.last_name.substring(0,1).toUpperCase():''}
                                </span>`;
      if(commentData.user_img){
        user_image_data = `<span class="slds-avatar slds-avatar_circle">
                            <img alt="Person name" src="/getUserPicture/${commentData.resource_id}" title="${commentData.first_name} ${commentData.last_name} By: ${commentData.email}">
                        </span>`
      }

      let commentHTML = `<section class="line-top tmr-20 tpd-10" id="comment${commentData.id}">
                            <div class="slds-grid">
                                <div class="slds-no-flex slds-p-right_small">
                                    ${user_image_data}
                                </div>
                                <div class="slds-has-flexi-truncate">
                                    <div class="slds-grid">
                                        <div class="slds-has-flexi-truncate">
                                            <div class="text-dull text-size-11">
                                                ${commentData.modified_date}
                                            </div>
                                        </div>
                                        ${editableHTML}
                                    </div>
                                    <div>
                                        <p>
                                            ${commentData.message.replace(/\r?\n/g,"<BR/>") }
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </section>`;

          $('.conver-accord-content #commentList',parentElement).append(commentHTML);
    }

    function editConversationData(conversation_id,conversation_message){
      $("#editConversationDataHeading").text('Edit Conversation');
      $("#editConversationDataTitle").val(`${conversation_message}`);
      $("#editConversationDataTitle").focus();
      let attr=`updateConversationData(${conversation_id},"conversation")`;
      $('#postEditConversationData').attr('onclick',attr);
      // $("#postEditConversationData").on('click',{"conversation_id":conversation_id,"type":"conversation"},updateConversationData);
      openModal('#modalEditConversation');
      // rerenderConversation('conversation'+conversation_id);
    }

    function deleteConversationData(conversation_id){
      showLoader('#globalLoader');
      $.ajax({
        type: 'POST',
        url : '/deleteConversation',
        contentType: 'application/json',
        dataType: 'json',
        data:JSON.stringify({"conversation_id":conversation_id}),
        success : function(response){
          if(response.success){
            hideLoader('#globalLoader');
            showGlobalToast('#globalToast', 'success', response.message, 4000);
            $('#conversation'+conversation_id).remove();
            $('#conversationCount').html('ACTIVITY ('+$('div[conversation_id]').length+')');
            // location.reload();
          }
        },
        error: function(response){
          console.log('error is : '+JSON.stringify(response));
          hideLoader('#globalLoader');
          showGlobalToast('#globalToast', 'error', response.responseJSON.message, 4000);
        }
      });
    }

    function deleteCommentData(comment_id,conversation_id){
      showLoader('#globalLoader');
      $.ajax({
        type: 'POST',
        url : '/deleteComment',
        contentType: 'application/json',
        dataType: 'json',
        data:JSON.stringify({"comment_id":comment_id,"conversation_id":conversation_id}),
        success : function(response){
          if(response.success){
            hideLoader('#globalLoader');
            showGlobalToast('#globalToast', 'success', response.message, 4000);
            $('#comment'+comment_id).remove();
            $('#conversation'+conversation_id+'_response').html('ACTIVITY ('+$('#commentList > section').length+')');
            $('#conversation'+conversation_id+'_modifiedOn').html('Last Modify: '+response.updatedProjectConversation.modified_date);
            rerenderConversation('conversation'+conversation_id);
            // location.reload();
          }
        },
        error: function(response){
          console.log('error is : '+JSON.stringify(response));
          hideLoader('#globalLoader');
          showGlobalToast('#globalToast', 'error', response.responseJSON.message, 4000);
        }
      });
    }

    function updateConversationData(conver_id,typ,comment_id){
      showLoader('#globalLoader');
      closeModal('#modalEditConversation');
      clearError('#editConversationDataTitle')
      let conversation_id = conver_id;
      let type = typ;
      let message = $("#editConversationDataTitle").val();
      if(message == '' || message == undefined ||message == null){
          hideLoader('#globalLoader');
          addError('#editConversationDataTitle', "Please enter the message");
      }else {
          let url =  ``;
          let updatedData = {};
          if(type == 'conversation'){
            url = '/editConversation';
            updatedData.conversation_id = conversation_id;
            updatedData.conversation_message = message;
          }else{
            url = '/editComment';
            updatedData.comment_id = comment_id;
            updatedData.comment_message = message;
            updatedData.conversation_id = conversation_id;
          }
          $.ajax({
            type: 'POST',
            url : url,
            contentType: 'application/json',
            dataType: 'json',
            data:JSON.stringify(updatedData),
            success : function(response){
              if(response.success){
                hideLoader('#globalLoader');
                showGlobalToast('#globalToast', 'success', response.message, 4000);
                rerenderConversation("conversation"+conversation_id);
                if (type == 'conversation') {
                  $('#conversation' + conversation_id + '_message').html(response.updatedProjectConversation.message);
                }
                $('#conversation' + conversation_id + '_modifiedOn').html('Last Modify :' + response.updatedProjectConversation.modified_date);
                // location.reload();
              }
            },
            error: function(response){
              console.log('error is : '+JSON.stringify(response));
              hideLoader('#globalLoader');
              showGlobalToast('#globalToast', 'error', response.responseJSON.message, 4000);
            }
          });
      }

    }

    function editCommentData(comment_id,comment_message,conversation_id){
      $("#editConversationDataHeading").text('Edit Comment')
      $("#editConversationDataTitle").val(`${comment_message}`);
      $("#editConversationDataTitle").focus();
      let attr=`updateConversationData(${conversation_id},"comment",${comment_id})`;
      $('#postEditConversationData').attr('onclick',attr);
      // $("#postEditConversationData").on('click',{"comment_id":comment_id,"conversation_id":conversation_id,"type":"comment"},updateConversationData);
      openModal('#modalEditConversation');
    }

    function addNewComment(conversation_id,email){
        showLoader('#globalLoader');
      // if(email)
      let commentParent = $("#addNewComment",`#${conversation_id}`)
      clearError(commentParent);
      let commentMessage = $("#addNewComment",`#${conversation_id}`).val();
      if(commentMessage == '' || commentMessage == undefined || commentMessage == null){
          hideLoader('#globalLoader');
          addError(commentParent, "Please enter the comment");
      }else{
          $.ajax({
            type: 'POST',
            url : '/addComment',
            contentType: 'application/json',
            dataType: 'json',
            data:JSON.stringify({"sendemail":email,"newCommentTitle":$("#addNewComment",`#${conversation_id}`).val(),"conversation_id":$(`#${conversation_id}`).attr('conversation_id'),"project_id":<%= project.id %>}),
            success : function(response){
              if(response.success){
                hideLoader('#globalLoader');
                showGlobalToast('#globalToast', 'success', response.message, 4000);
                // location.reload();
                rerenderConversation(conversation_id);
                $('#'+conversation_id+'_modifiedOn').html('Last Modify: '+response.updatedProjectConversation.modified_date)
              }
            },
            error: function(response){
              console.log('error is : '+JSON.stringify(response));
              hideLoader('#globalLoader');
              showGlobalToast('#globalToast', 'error', response.responseJSON.message, 4000);
            }
          });
      }



    }

    function rerenderConversation(conversation_id){
      $('#'+conversation_id).prependTo('#converWrapper');
      toggleConversation('#converWrapper', document.getElementById(conversation_id));
      toggleConversation('#converWrapper', document.getElementById(conversation_id));
      $('#addNewComment').val('');
    }

    function renderNewConversationThread(insertedProjectConversation){
      let conversationLine='';
      insertedProjectConversation.message.split('\n').forEach(conver_line => {
        conversationLine+=conver_line+"<br>"
      });
      let conversationId=insertedProjectConversation.id;

     let htm=`<!-- conversation thread start -->
                                        <div class="slds-card slds-p-around_medium conver-accord-title bmr-15" id="conversation${conversationId}" conversation_id = "${conversationId}">
                                            <div class="slds-grid slds-wrap">
                                              <div class="slds-size_1-of-1 slds-medium-size_8-of-12">
                                                <div class="slds-grid expandDiv" onclick="toggleConversation('#converWrapper', this);">
                                                    <div class="slds-no-flex slds-p-right_small ">
                                                        <div class="conver-icon-close">
                                                            <i class="fa fa-plus-circle fa-2x text-blue"></i>
                                                        </div>
                                                        <div class="conver-icon-open">
                                                            <i class="fa fa-minus-circle fa-2x text-dull"></i>
                                                        </div>
                                                    </div>
                                                    <div class="slds-has-flexi-truncate">
                                                        <div class="">
                                                            <a href="javascript:void(0);" class="text-size-16" id="conversation${conversationId}_message">
                                                              ${conversationLine}
                                                            </a>
                                                        </div>
  
                                                        <div>
                                                            <span class="text-dull text-size-11 " id="conversation${conversationId}_modifiedOn">
                                                                Last Modify: ${insertedProjectConversation.modified_date}
                                                            </span>
                                                            <span class="text-dull text-size-11 ">
                                                                 / By: <%= user.first_name %> <%= user.last_name %> <%= user.email %>
                                                            </span>
                                                        </div>
                                                    </div>
                                                  </div>
                                              </div>
                                              <div class="slds-size_1-of-1 slds-medium-size_4-of-12">
                                                <div class="slds-grid">
                                                  <div class="slds-has-flexi-truncate">
                                                    <div class="sm-tpd-15">
                                                        <div class="slds-truncate  text-dull slds-p-bottom_xx-small text-size-11 sm-hide">
                                                            Response
                                                        </div>
                                                        <div>
                                                           <span class="slds-badge" id="conversation${conversationId}_response"> 0 </span>
                                                        </div>
                                                    </div>
                                                  </div>
                                                  <div class="slds-no-flex">
                                                      <a href="javascript:void(0)" onclick="editConversationData('${conversationId}', '${insertedProjectConversation.message}')" title="edit conversation">
                                                           <i class="fa fa-edit"></i>
                                                       </a>
                                                       <a href="javascript:void(0)" class="lpd-10" onclick="deleteBeforeConfirm('#globalAlert', 'deleteConversationData(\'${conversationId}\')','Are you sure you want to remove this conversation ? All the comment related to this conversation will also be removed . Press confirm to delete this conversation.');" title="delete conversation">
                                                           <i class="fa fa-trash text-red"></i>
                                                       </a>
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                              <div class="conver-accord-content line-top tpd-10 tmr-10">
                                                  <!-- comment form start -->
                                                  <div>
                                                      <div class="slds-grid">
                                                          <div class="slds-no-flex slds-p-right_small">
                                                            <% function getRandomColor() {
                                                                 return "#"+((1<<24)*Math.random()|0).toString(16);
                                                             } %>
                                                             <% if(!user.user_img){ %>
                                                                <span class="slds-avatar slds-avatar_circle user-name-initials" style="background-color:<%= getRandomColor() %>;color:white;" title="<%= user.first_name%> <%=user.last_name%> By: <%=user.email%>">
                                                                  <%= user.first_name.substring(0,1).toUpperCase()%><%= user.last_name?user.last_name.substring(0,1).toUpperCase():'' %>
                                                                </span>
                                                              <% } else { %>
                                                                <span class="slds-avatar slds-avatar_circle" >
                                                                    <img alt="Person name" src="/getUserPicture/<%= user.id %>" title = "<%= user.first_name %>  <%= user.last_name %>  By:<%= user.email %>" >
                                                                </span>
                                                              <% } %>
                                                          </div>
                                                          <div class="slds-has-flexi-truncate">
                                                              <div class="slds-form-element ">
                                                                  <div class="slds-form-element__control">
                                                                      <textarea id="addNewComment" class="slds-textarea" required = "" placeholder="Write a comment" rows="3"></textarea>
                                                                      <div class="slds-text-color_error text-size-12 slds-p-top_xx-small">
  
                                                                      </div>
                                                                  </div>
                                                              </div>
                                                              <div class="text-right">
                                                                  <button class="slds-button slds-button_brand" id="addCommentBtnAndEmail" onclick="addNewComment('conversation${conversationId}',true)">
                                                                      Add & Email
                                                                  </button>
                                                                  <button class="slds-button slds-button_brand" id="addCommentBtn" onclick="addNewComment('conversation${conversationId}',false)">
                                                                      Add
                                                                  </button>
                                                              </div>
                                                          </div>
                                                      </div>
                                                  </div>
                                                  <!-- comment form end -->
                                                  <div id="commentList">
                                                  </div>
                                              </div>
                                          </div>  `;
                                          $('#converWrapper').prepend(htm);
                                          toggleConversation('#converWrapper', document.getElementById('conversation'+conversationId));                                          
                                          $('#conversationCount').html('ACTIVITY ('+$('div[conversation_id]').length+')');
    }

    function createNewConversationThread(){
      showLoader('#globalLoader');
      $("#newConversationSection").removeClass('has-error');
      clearError("#newConversationTitle");
      checkFormValidation("#newConversationSection");
      if(!$("#newConversationSection").hasClass('has-error')) {
		    $.ajax({
		      type: 'POST',
		      url : '/addConversation',
		      contentType: 'application/json',
		      dataType: 'json',
		      data:JSON.stringify({"newConversationTitle":$("#newConversationTitle").val(),"project_id":<%= project.id %>}),
		       success : function(response){
				   if(response.success){
                hideLoader('#globalLoader');
                if(response.insertedProjectConversation){
                  renderNewConversationThread(response.insertedProjectConversation);
                }
    						showGlobalToast('#globalToast', 'success', response.message, 4000);
    					   	// location.reload();
    				   }
		       },
		       error: function(response){
                console.log('error is : '+JSON.stringify(response));
                hideLoader('#globalLoader');
                showGlobalToast('#globalToast', 'error', response.responseJSON.message, 4000);
		       }
		    });
			}else{
				hideLoader('#globalLoader');
			}
    }

    // function createConversationThreadHTML(){
    //   let conThreadHTML=``;
    // }

</script>
